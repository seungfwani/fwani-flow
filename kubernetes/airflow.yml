apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: airflow
  name: airflow
  namespace: workflow4graphio
spec:
  selector:
    matchLabels:
      app: airflow
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
    securityContext:
      fsGroup: 1000  # airflow UID
    spec:
      containers:
        - name: airflow
          image: apache/airflow:2.10.4-python3.11
          command: ["/bin/bash", "-c"]
          args:
            - |
              echo "üìÅ entrypoint.sh Î≥µÏÇ¨ Î∞è Ïã§Ìñâ Í∂åÌïú Î∂ÄÏó¨"
              cp /entrypoint.sh /app/entrypoint.sh
              chmod +x /app/entrypoint.sh
              exec /app/entrypoint.sh
          env:
            - name: LOAD_EXAMPLES
              value: "False"
            - name: AIRFLOW__CORE__EXECUTOR
              value: "LocalExecutor"
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              value: "postgresql+psycopg2://airflow:airflow@postgres-svc:5432/airflow"
            - name: AIRFLOW__CORE__DAGS_FOLDER
              value: "/opt/airflow/dags"
            - name: AIRFLOW__LOGGING__BASE_LOG_FOLDER
              value: "/opt/airflow/logs"
            - name: AIRFLOW__WORKFLOW__SHARED_FOLDER
              value: "/app/shared"
            - name: PYTHONPATH
              value: "/app/built_in_functions:$PYTHONPATH"
          ports:
            - containerPort: 8080
              name: api-port
              protocol: TCP
          volumeMounts:
            - mountPath: /app/shared
              name: ext-volume
              subPath: airflow/shared
            - mountPath: /app/built_in_functions
              name: ext-volume
              subPath: airflow/built_in_functions
            - mountPath: /opt/airflow/logs
              name: ext-volume
              subPath: airflow/logs
            - mountPath: /opt/airflow/dags
              name: ext-volume
              subPath: airflow/dags
            - mountPath: /entrypoint.sh
              name: airflow
              subPath: entrypoint.sh
      volumes:
        - name: ext-volume
          persistentVolumeClaim:
            claimName: pvc-workflow4graphio
        - configMap:
            defaultMode: 420
            name: airflow
          name: airflow
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: airflow
  name: airflow-svc
  namespace: workflow4graphio
spec:
  ports:
  - name: api-port
    port: 8080
    protocol: TCP
    targetPort: api-port
  selector:
    app: airflow
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
      app: airflow
  name: airflow
  namespace: workflow4graphio
data:
  entrypoint.sh: |-
    #!/bin/bash

    echo "üí° Airflow Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ï¥àÍ∏∞Ìôî..."
    airflow db init
    
    echo "üîÑ Airflow ÏÇ¨Ïö©Ïûê Ï∂îÍ∞Ä..."
    airflow users create \
        --username admin \
        --password admin \
        --firstname Seunghwan \
        --lastname Seo \
        --role Admin \
        --email seungfwami2@mobigen.com || echo "‚ö†Ô∏è Admin Í≥ÑÏ†ïÏù¥ Ïù¥ÎØ∏ Ï°¥Ïû¨ÌïòÍ±∞ÎÇò ÏÉùÏÑ± Ïã§Ìå®."
    
    
    #echo "üöÄ PyCharm Remote Debug ÌôúÏÑ±Ìôî..."
    #python -m debugpy --listen 0.0.0.0:5678 --wait-for-client --log-to-stderr -m airflow webserver &  # Debug Î™®Îìú
    
    echo "üöÄ Airflow Standalone Ïã§Ìñâ..."
    airflow standalone
