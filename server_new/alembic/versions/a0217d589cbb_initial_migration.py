"""Initial migration

Revision ID: a0217d589cbb
Revises: 
Create Date: 2025-08-11 17:58:38.861947

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a0217d589cbb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('flow',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('is_draft', sa.Boolean(), nullable=True),
    sa.Column('dag_id', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('owner_id', sa.String(), nullable=True),
    sa.Column('hash', sa.String(), nullable=True),
    sa.Column('file_hash', sa.String(), nullable=True),
    sa.Column('is_loaded_by_airflow', sa.Boolean(), nullable=True),
    sa.Column('schedule', sa.String(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('active_status', sa.Boolean(), nullable=True),
    sa.Column('max_retires', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flow_dag_id'), 'flow', ['dag_id'], unique=True)
    op.create_index(op.f('ix_flow_id'), 'flow', ['id'], unique=False)
    op.create_index(op.f('ix_flow_name'), 'flow', ['name'], unique=False)
    op.create_table('function_template',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('python_libraries', sa.JSON(), nullable=True),
    sa.Column('code_string', sa.Text(), nullable=True),
    sa.Column('code_hash', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_function_template_id'), 'function_template', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('airflow_dag_run_history',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('flow_id', sa.String(), nullable=False),
    sa.Column('dag_id', sa.String(), nullable=False),
    sa.Column('run_id', sa.String(), nullable=False),
    sa.Column('execution_date', sa.DateTime(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('external_trigger', sa.Boolean(), nullable=True),
    sa.Column('run_type', sa.String(), nullable=True),
    sa.Column('conf', sa.String(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['flow_id'], ['flow.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flow_execution_queue',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('flow_id', sa.String(), nullable=False),
    sa.Column('dag_id', sa.String(), nullable=True),
    sa.Column('run_id', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('scheduled_time', sa.DateTime(), nullable=True),
    sa.Column('triggered_time', sa.DateTime(), nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('try_count', sa.Integer(), nullable=True),
    sa.Column('file_hash', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['flow_id'], ['flow.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flow_execution_queue_id'), 'flow_execution_queue', ['id'], unique=False)
    op.create_table('task',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('flow_id', sa.String(), nullable=False),
    sa.Column('variable_id', sa.String(), nullable=False),
    sa.Column('kind', sa.String(), nullable=True),
    sa.Column('code_string', sa.Text(), nullable=True),
    sa.Column('code_hash', sa.String(), nullable=True),
    sa.Column('python_libraries', sa.JSON(), nullable=True),
    sa.Column('impl_namespace', sa.String(), nullable=True),
    sa.Column('impl_callable', sa.String(), nullable=True),
    sa.Column('input_meta_type', sa.JSON(), nullable=True),
    sa.Column('output_meta_type', sa.JSON(), nullable=True),
    sa.Column('ui_type', sa.String(), nullable=True),
    sa.Column('ui_label', sa.String(), nullable=True),
    sa.Column('ui_position', sa.JSON(), nullable=True),
    sa.Column('ui_style', sa.JSON(), nullable=True),
    sa.Column('ui_extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['flow_id'], ['flow.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_id'), 'task', ['id'], unique=False)
    op.create_table('airflow_dag_run_snapshot_edge',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('dag_run_history_id', sa.String(), nullable=False),
    sa.Column('edge_id', sa.String(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('target', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.Column('labelStyle', sa.JSON(), nullable=True),
    sa.Column('labelBgStyle', sa.JSON(), nullable=True),
    sa.Column('labelBgPadding', sa.JSON(), nullable=True),
    sa.Column('labelBgBorderRadius', sa.Numeric(), nullable=True),
    sa.Column('style', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['dag_run_history_id'], ['airflow_dag_run_history.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('airflow_dag_run_snapshot_task',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('dag_run_history_id', sa.String(), nullable=False),
    sa.Column('task_id', sa.String(), nullable=True),
    sa.Column('variable_id', sa.String(), nullable=True),
    sa.Column('function_id', sa.String(), nullable=True),
    sa.Column('inputs', sa.JSON(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.Column('position', sa.JSON(), nullable=True),
    sa.Column('style', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['dag_run_history_id'], ['airflow_dag_run_history.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('edge',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('flow_id', sa.String(), nullable=False),
    sa.Column('from_task_id', sa.String(), nullable=True),
    sa.Column('to_task_id', sa.String(), nullable=True),
    sa.Column('ui_type', sa.String(), nullable=True),
    sa.Column('ui_label', sa.String(), nullable=True),
    sa.Column('ui_labelStyle', sa.JSON(), nullable=True),
    sa.Column('ui_labelBgStyle', sa.JSON(), nullable=True),
    sa.Column('ui_labelBgPadding', sa.JSON(), nullable=True),
    sa.Column('ui_labelBgBorderRadius', sa.Numeric(), nullable=True),
    sa.Column('ui_style', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['flow_id'], ['flow.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['from_task_id'], ['task.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_task_id'], ['task.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_edge_id'), 'edge', ['id'], unique=False)
    op.create_table('task_input',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('task_id', sa.String(), nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('type', sa.String(), server_default='string', nullable=False),
    sa.Column('value', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_input_id'), 'task_input', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_task_input_id'), table_name='task_input')
    op.drop_table('task_input')
    op.drop_index(op.f('ix_edge_id'), table_name='edge')
    op.drop_table('edge')
    op.drop_table('airflow_dag_run_snapshot_task')
    op.drop_table('airflow_dag_run_snapshot_edge')
    op.drop_index(op.f('ix_task_id'), table_name='task')
    op.drop_table('task')
    op.drop_index(op.f('ix_flow_execution_queue_id'), table_name='flow_execution_queue')
    op.drop_table('flow_execution_queue')
    op.drop_table('airflow_dag_run_history')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_function_template_id'), table_name='function_template')
    op.drop_table('function_template')
    op.drop_index(op.f('ix_flow_name'), table_name='flow')
    op.drop_index(op.f('ix_flow_id'), table_name='flow')
    op.drop_index(op.f('ix_flow_dag_id'), table_name='flow')
    op.drop_table('flow')
    # ### end Alembic commands ###
